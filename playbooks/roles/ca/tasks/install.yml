---
#TODO: detech python3-openssl or python-openssl
- name: Install OpenSSL
  when: ansible_os_family == "Debian"
  apt:
    name:
      - openssl
      - python-openssl
      - python3-openssl

# Prepare OpenSSL infrastructure
- name: Create directory for OpenSSL CSR (certificate signing requests)
  file:
    path: "{{ SSL_CSR_DIR }}"
    state: directory
    owner: "{{ SSL_USER }}"
    group: "{{ SSL_GROUP }}"
    mode: 755

- name: Create directory for OpenSSL private stuff
  file:
    path: "{{ SSL_PRV_DIR }}"
    state: directory
    owner: "{{ SSL_USER }}"
    group: "{{ SSL_GROUP }}"
    mode: 700

- name: Create directory for OpenSSL collection of certificates
  file:
    path: "{{ SSL_CRT_DIR }}"
    state: directory
    owner: "{{ SSL_USER }}"
    group: "{{ SSL_GROUP }}"
    mode: 755

- name: Create empty DB of expired certificates
  copy:
    content: ""
    dest: "{{ SSL_BASE_DIR }}/{{ SSL_IDX_FNAME }}"
    force: no
    owner: "{{ SSL_USER }}"
    group: "{{ SSL_GROUP }}"
    mode: 644

# Prepare configs
- name: Copy config files
  template:
    # TODO: ansible root directory variable
    src: ../conf/openssl.cnf
    dest: "{{ SSL_BASE_DIR }}"
    owner: "{{ SSL_USER }}"
    group: "{{ SSL_GROUP }}"
    mode: 0640

# Generate CA crypto staff
- name: Generate Lumba-Lumba CA private key
  openssl_privatekey:
    path: "{{ SSL_PRV_DIR }}/{{ SSL_PRV_FNAME }}"
    type: "{{ SSL_PRV_TYPE }}"
    cipher: "{{ SSL_PRV_CIPHER }}"
    # TODO: change and hide passphrase
    passphrase: "{{ SSL_PRV_PWD }}"
    size: "{{ SSL_PRV_SIZE }}"
    owner: "{{ SSL_USER }}"
    group: "{{ SSL_GROUP }}"
    mode: 0640

- name: Generate Lumba-Lumba CA CSR (certificate signing request)
  openssl_csr:
    path: "{{ SSL_CSR_DIR }}/{{ SSL_CSR_FNAME }}"
    privatekey_path: "{{ SSL_PRV_DIR }}/{{ SSL_PRV_FNAME }}"
    # TODO: change and hide passphrase
    privatekey_passphrase: "{{ SSL_PRV_PWD }}"
    common_name: "{{ SSL_CA_NAME }}"

- name: Generate Lumba-Lumba CA CRT (self-signed certificate)
  openssl_certificate:
    path: "{{ SSL_CRT_DIR }}/{{ SSL_CRT_FNAME }}"
    privatekey_path: "{{ SSL_PRV_DIR }}/{{ SSL_PRV_FNAME }}"
    # TODO: change and hide passphrase
    privatekey_passphrase: "{{ SSL_PRV_PWD }}"
    csr_path: "{{ SSL_CSR_DIR }}/{{ SSL_CSR_FNAME }}"
    provider: selfsigned

- name: Register content of CA CRT file as an ansible fact
  slurp:
    src: "{{ SSL_CRT_DIR }}/{{ SSL_CRT_FNAME }}"
  register: ca_crt_content

- name: Generate Lumba-Lumba CA CRL file (list of revoked certificates)
  # TODO: care about permissions
  # TODO: find a proper way to pass password
  # TODO: copy to VPN server (or share by other way)
  command: "openssl ca -gencrl -out '{{ SSL_BASE_DIR }}/{{ SSL_CRL_FNAME }}' -key '{{ SSL_PRV_PWD }}'"
  args:
    creates: "{{ SSL_BASE_DIR }}/{{ SSL_CRL_FNAME }}"
  #stdin: "{{ SSL_PRV_PWD }}"

- name: Register content of CA CRL file as an ansible fact
  slurp:
    src: "{{ SSL_BASE_DIR }}/{{ SSL_CRL_FNAME }}"
  register: crl_pem_content

